/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
    employers: EmployerAuthOperations;
    employees: EmployeeAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    employers: Employer;
    employees: Employee;
    'payroll-advances': PayrollAdvance;
    'payroll-repayments': PayrollRepayment;
    payrolls: Payroll;
    'payroll-transactions': PayrollTransaction;
    'factoring-calculations': FactoringCalculation;
    'factoring-repayments': FactoringRepayment;
    'payroll-factoring': PayrollFactoring;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    employers: EmployersSelect<false> | EmployersSelect<true>;
    employees: EmployeesSelect<false> | EmployeesSelect<true>;
    'payroll-advances': PayrollAdvancesSelect<false> | PayrollAdvancesSelect<true>;
    'payroll-repayments': PayrollRepaymentsSelect<false> | PayrollRepaymentsSelect<true>;
    payrolls: PayrollsSelect<false> | PayrollsSelect<true>;
    'payroll-transactions': PayrollTransactionsSelect<false> | PayrollTransactionsSelect<true>;
    'factoring-calculations': FactoringCalculationsSelect<false> | FactoringCalculationsSelect<true>;
    'factoring-repayments': FactoringRepaymentsSelect<false> | FactoringRepaymentsSelect<true>;
    'payroll-factoring': PayrollFactoringSelect<false> | PayrollFactoringSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user:
    | (User & {
        collection: 'users';
      })
    | (Employer & {
        collection: 'employers';
      })
    | (Employee & {
        collection: 'employees';
      });
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface EmployerAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface EmployeeAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  companyUUID: string;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  description?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  companyUUID: string;
  /**
   * Controls whether this category is active
   */
  active?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  userId: string;
  name: string;
  role: 'admin' | 'staff' | 'employer' | 'employee' | 'user';
  status?: ('active' | 'inactive' | 'suspended') | null;
  companyUUID?: string | null;
  permissions?: ('payroll_access' | 'payroll_admin')[] | null;
  lastLogin?: string | null;
  createdAt: string;
  updatedAt: string;
  employeeProfile?: (number | null) | Employee;
  employerProfile?: (number | null) | Employer;
  investmentDetails?: {
    totalInvestment?: number | null;
    expectedReturnRate?: number | null;
    profitDistributionType?: ('fixed' | 'variable') | null;
  };
  membershipTier?: ('bronze' | 'silver' | 'gold' | 'platinum') | null;
  advanceLimit?: number | null;
  previousDefaults?: number | null;
  lastRepaymentStatus?: ('ontime' | 'late' | 'default') | null;
  authProvider: 'local' | 'google' | 'facebook';
  mobileNumber?: string | null;
  welcomeEmailSent?: boolean | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * Employee accounts (API access only)
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employees".
 */
export interface Employee {
  id: number;
  employeeUuid: string;
  /**
   * Associated user account
   */
  userId: number | User;
  employerId: number | Employer;
  /**
   * Company-specific Employee ID
   */
  employeeId: string;
  firstName: string;
  middleName?: string | null;
  lastName: string;
  suffixes?: string | null;
  fullName: string;
  dateOfBirth: string;
  maritalStatus: 'single' | 'married' | 'widowed' | 'divorced';
  mobileNumber: string;
  address: {
    street: string;
    barangay: string;
    cityDistrict: string;
    province: string;
    zipCode: string;
  };
  employerProfile?: (number | null) | Employer;
  companyUUID: number | Employer;
  department: string;
  position: string;
  employmentType: 'full_time' | 'part_time' | 'contract';
  employmentStatus: 'regular' | 'probationary' | 'contract' | 'part_time';
  jobTitle: string;
  basicMonthlyPayNet: number;
  paymentDetails: {
    bankName: string;
    accountNumber: string;
  };
  /**
   * Monthly base salary
   */
  salary: number;
  startDate: string;
  advanceSettings: {
    advanceLimit: number;
    creditScore?: number | null;
    riskCategory?: ('lowRisk' | 'mediumRisk' | 'highRisk') | null;
  };
  bankDetails: {
    bankName: string;
    accountNumber: string;
    accountName: string;
    accountType: 'savings' | 'checking' | 'payroll';
  };
  authProvider: 'local' | 'google' | 'facebook';
  googleId?: string | null;
  facebookId?: string | null;
  status: 'pending' | 'active' | 'suspended';
  lastLogin?: string | null;
  advanceHistory?:
    | {
        advanceId?: (number | null) | PayrollAdvance;
        amount?: number | null;
        date?: string | null;
        status?: ('pending' | 'approved' | 'rejected' | 'disbursed' | 'completed') | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Duration in months
   */
  employmentDuration?: number | null;
  performanceScore?: number | null;
  createdAt: string;
  updatedAt: string;
  loanAccess?: {
    isApproved?: boolean | null;
    approvedBy?: (number | null) | User;
    approvalDate?: string | null;
    creditScore?: number | null;
  };
  documents?:
    | {
        file: number | Media;
        documentType?: ('id' | 'contract' | 'other') | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  financialDetails?: {};
  personalInfo?: {};
  membershipTier: 'bronze' | 'silver' | 'gold' | 'platinum';
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * Employer accounts (API access only)
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employers".
 */
export interface Employer {
  id: number;
  authProvider: 'local' | 'google' | 'facebook';
  googleId?: string | null;
  facebookId?: string | null;
  /**
   * Company logo or profile picture (automatically set for social login users)
   */
  avatar?: (number | null) | Media;
  /**
   * Associated user account
   */
  userId: number | User;
  companyName: string;
  /**
   * Company ID (leave blank to auto-generate, or enter a custom ID)
   */
  companyUUID?: string | null;
  registrationNumber: string;
  phoneNumber: string;
  address: {
    street: string;
    barangay: string;
    cityDistrict: string;
    province: string;
    zipCode: string;
  };
  businessType: 'corporation' | 'partnership' | 'soleProprietorship';
  industry: string;
  /**
   * External payroll integration provider
   */
  payrollProvider?: string | null;
  status?: ('active' | 'inactive' | 'suspended') | null;
  lastLogin?: string | null;
  payrollSettings: {
    payrollCycle: 'monthly' | 'semi_monthly' | 'weekly' | 'bi_weekly';
    payrollDates?:
      | {
          date: number;
          id?: string | null;
        }[]
      | null;
  };
  factoringAgreementSigned?: boolean | null;
  creditLimit: number;
  bankDetails: {
    bankName: string;
    accountNumber: string;
    accountName: string;
  };
  riskAssessment?: {
    creditScore?: number | null;
    riskCategory?: ('lowRisk' | 'mediumRisk' | 'highRisk') | null;
  };
  /**
   * Risk assessment and credit profile
   */
  riskProfile: {
    creditLimit: number;
    riskRating?: ('AAA' | 'AA' | 'A' | 'BBB' | 'BB' | 'B' | 'CCC' | 'CC' | 'C' | 'D') | null;
    riskScore?: number | null;
    lastAssessmentDate?: string | null;
  };
  /**
   * Key risk indicators
   */
  riskMetrics?: {
    defaultProbability?: number | null;
    lossGivenDefault?: number | null;
    exposureAtDefault?: number | null;
    expectedCreditLoss?: number | null;
  };
  factoringSettings?: {
    enabled?: boolean | null;
    maxAdvancePercentage?: number | null;
    defaultTenureDays?: number | null;
    minDaysBetweenAdvances?: number | null;
  };
  factoringStats?: {
    totalAdvanceAmount?: number | null;
    outstandingAdvances?: number | null;
    averageRepaymentTime?: number | null;
    lastAdvanceDate?: string | null;
  };
  createdAt: string;
  updatedAt: string;
  companyDetails?: {};
  financialInfo?: {};
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payroll-advances".
 */
export interface PayrollAdvance {
  id: number;
  advanceId: string;
  employeeId: number | Employee;
  companyUUID: number | Employer;
  requestedAmount: number;
  approvedAmount?: number | null;
  processingFee: number;
  netDisbursementAmount?: number | null;
  workingDaysCompleted: number;
  earnedSalaryAmount: number;
  repaymentDueDate: string;
  status: 'requested' | 'approved' | 'disbursed' | 'repaid' | 'defaulted';
  requestDate: string;
  approvalDate?: string | null;
  disbursementDate?: string | null;
  createdBy: number | User;
  lastUpdatedBy?: (number | null) | User;
  membershipTier: 'bronze' | 'silver' | 'gold' | 'platinum';
  payrollPeriod: {
    startDate: string;
    endDate: string;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payroll-repayments".
 */
export interface PayrollRepayment {
  id: number;
  repaymentId: string;
  advanceId: number | PayrollAdvance;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payrolls".
 */
export interface Payroll {
  id: number;
  payrollId: string;
  employerId: number | Employer;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payroll-transactions".
 */
export interface PayrollTransaction {
  id: number;
  transactionId: string;
  companyUUID: number | Employer;
  employeeId: number | Employee;
  advanceId?: (number | null) | PayrollAdvance;
  repaymentId?: (number | null) | PayrollRepayment;
  transactionDate: string;
  transactionType: 'disbursement' | 'repayment' | 'fee';
  amount: number;
  paymentStatus: 'processing' | 'completed' | 'failed' | 'pending' | 'cancelled';
  bankDetails?: {
    bankName?: string | null;
    /**
     * Last 4 digits only
     */
    accountNumber?: string | null;
    routingNumber?: string | null;
    referenceNumber?: string | null;
  };
  reconciliationStatus?: ('pending' | 'matched' | 'unmatched' | 'reconciled') | null;
  fees?:
    | {
        feeType: 'processing' | 'wire' | 'late' | 'other';
        amount: number;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  metadata?: {
    initiatedBy?: (number | null) | User;
    approvedBy?: (number | null) | User;
    notes?: string | null;
    attachments?:
      | {
          file?: (number | null) | Media;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "factoring-calculations".
 */
export interface FactoringCalculation {
  id: number;
  advanceId: string;
  employerId: number | Employer;
  payrollId: number | Payroll;
  riskScore?: number | null;
  riskCategory?: ('lowRisk' | 'mediumRisk' | 'highRisk') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "factoring-repayments".
 */
export interface FactoringRepayment {
  id: number;
  repaymentId: string;
  advanceId: number | FactoringCalculation;
  companyUUID: number | Employer;
  scheduledPaymentDate: string;
  actualPaymentDate?: string | null;
  totalAmountDue: number;
  totalAmountPaid?: number | null;
  paymentStatus: 'pending' | 'paid' | 'overdue' | 'defaulted' | 'partially_paid';
  amountDue: {
    principal: number;
    interest: number;
    fees?: number | null;
  };
  amountPaid?: {
    principal?: number | null;
    interest?: number | null;
    fees?: number | null;
  };
  lateFees?:
    | {
        feeDate: string;
        feeType: 'fixed' | 'percentage';
        feeAmount: number;
        paid?: boolean | null;
        id?: string | null;
      }[]
    | null;
  paymentHistory?:
    | {
        paymentDate: string;
        amount: number;
        paymentMethod: 'bank' | 'debit' | 'check';
        referenceNumber?: string | null;
        id?: string | null;
      }[]
    | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payroll-factoring".
 */
export interface PayrollFactoring {
  id: number;
  factorUUID: string;
  companyUUID: number | Employer;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'employers';
        value: number | Employer;
      } | null)
    | ({
        relationTo: 'employees';
        value: number | Employee;
      } | null)
    | ({
        relationTo: 'payroll-advances';
        value: number | PayrollAdvance;
      } | null)
    | ({
        relationTo: 'payroll-repayments';
        value: number | PayrollRepayment;
      } | null)
    | ({
        relationTo: 'payrolls';
        value: number | Payroll;
      } | null)
    | ({
        relationTo: 'payroll-transactions';
        value: number | PayrollTransaction;
      } | null)
    | ({
        relationTo: 'factoring-calculations';
        value: number | FactoringCalculation;
      } | null)
    | ({
        relationTo: 'factoring-repayments';
        value: number | FactoringRepayment;
      } | null)
    | ({
        relationTo: 'payroll-factoring';
        value: number | PayrollFactoring;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user:
    | {
        relationTo: 'users';
        value: number | User;
      }
    | {
        relationTo: 'employers';
        value: number | Employer;
      }
    | {
        relationTo: 'employees';
        value: number | Employee;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user:
    | {
        relationTo: 'users';
        value: number | User;
      }
    | {
        relationTo: 'employers';
        value: number | Employer;
      }
    | {
        relationTo: 'employees';
        value: number | Employee;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  companyUUID?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  slug?: T;
  slugLock?: T;
  companyUUID?: T;
  active?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  userId?: T;
  name?: T;
  role?: T;
  status?: T;
  companyUUID?: T;
  permissions?: T;
  lastLogin?: T;
  createdAt?: T;
  updatedAt?: T;
  employeeProfile?: T;
  employerProfile?: T;
  investmentDetails?:
    | T
    | {
        totalInvestment?: T;
        expectedReturnRate?: T;
        profitDistributionType?: T;
      };
  membershipTier?: T;
  advanceLimit?: T;
  previousDefaults?: T;
  lastRepaymentStatus?: T;
  authProvider?: T;
  mobileNumber?: T;
  welcomeEmailSent?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employers_select".
 */
export interface EmployersSelect<T extends boolean = true> {
  authProvider?: T;
  googleId?: T;
  facebookId?: T;
  avatar?: T;
  userId?: T;
  companyName?: T;
  companyUUID?: T;
  registrationNumber?: T;
  phoneNumber?: T;
  address?:
    | T
    | {
        street?: T;
        barangay?: T;
        cityDistrict?: T;
        province?: T;
        zipCode?: T;
      };
  businessType?: T;
  industry?: T;
  payrollProvider?: T;
  status?: T;
  lastLogin?: T;
  payrollSettings?:
    | T
    | {
        payrollCycle?: T;
        payrollDates?:
          | T
          | {
              date?: T;
              id?: T;
            };
      };
  factoringAgreementSigned?: T;
  creditLimit?: T;
  bankDetails?:
    | T
    | {
        bankName?: T;
        accountNumber?: T;
        accountName?: T;
      };
  riskAssessment?:
    | T
    | {
        creditScore?: T;
        riskCategory?: T;
      };
  riskProfile?:
    | T
    | {
        creditLimit?: T;
        riskRating?: T;
        riskScore?: T;
        lastAssessmentDate?: T;
      };
  riskMetrics?:
    | T
    | {
        defaultProbability?: T;
        lossGivenDefault?: T;
        exposureAtDefault?: T;
        expectedCreditLoss?: T;
      };
  factoringSettings?:
    | T
    | {
        enabled?: T;
        maxAdvancePercentage?: T;
        defaultTenureDays?: T;
        minDaysBetweenAdvances?: T;
      };
  factoringStats?:
    | T
    | {
        totalAdvanceAmount?: T;
        outstandingAdvances?: T;
        averageRepaymentTime?: T;
        lastAdvanceDate?: T;
      };
  createdAt?: T;
  updatedAt?: T;
  companyDetails?: T | {};
  financialInfo?: T | {};
  enableAPIKey?: T;
  apiKey?: T;
  apiKeyIndex?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "employees_select".
 */
export interface EmployeesSelect<T extends boolean = true> {
  employeeUuid?: T;
  userId?: T;
  employerId?: T;
  employeeId?: T;
  firstName?: T;
  middleName?: T;
  lastName?: T;
  suffixes?: T;
  fullName?: T;
  dateOfBirth?: T;
  maritalStatus?: T;
  mobileNumber?: T;
  address?:
    | T
    | {
        street?: T;
        barangay?: T;
        cityDistrict?: T;
        province?: T;
        zipCode?: T;
      };
  employerProfile?: T;
  companyUUID?: T;
  department?: T;
  position?: T;
  employmentType?: T;
  employmentStatus?: T;
  jobTitle?: T;
  basicMonthlyPayNet?: T;
  paymentDetails?:
    | T
    | {
        bankName?: T;
        accountNumber?: T;
      };
  salary?: T;
  startDate?: T;
  advanceSettings?:
    | T
    | {
        advanceLimit?: T;
        creditScore?: T;
        riskCategory?: T;
      };
  bankDetails?:
    | T
    | {
        bankName?: T;
        accountNumber?: T;
        accountName?: T;
        accountType?: T;
      };
  authProvider?: T;
  googleId?: T;
  facebookId?: T;
  status?: T;
  lastLogin?: T;
  advanceHistory?:
    | T
    | {
        advanceId?: T;
        amount?: T;
        date?: T;
        status?: T;
        id?: T;
      };
  employmentDuration?: T;
  performanceScore?: T;
  createdAt?: T;
  updatedAt?: T;
  loanAccess?:
    | T
    | {
        isApproved?: T;
        approvedBy?: T;
        approvalDate?: T;
        creditScore?: T;
      };
  documents?:
    | T
    | {
        file?: T;
        documentType?: T;
        description?: T;
        id?: T;
      };
  financialDetails?: T | {};
  personalInfo?: T | {};
  membershipTier?: T;
  enableAPIKey?: T;
  apiKey?: T;
  apiKeyIndex?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payroll-advances_select".
 */
export interface PayrollAdvancesSelect<T extends boolean = true> {
  advanceId?: T;
  employeeId?: T;
  companyUUID?: T;
  requestedAmount?: T;
  approvedAmount?: T;
  processingFee?: T;
  netDisbursementAmount?: T;
  workingDaysCompleted?: T;
  earnedSalaryAmount?: T;
  repaymentDueDate?: T;
  status?: T;
  requestDate?: T;
  approvalDate?: T;
  disbursementDate?: T;
  createdBy?: T;
  lastUpdatedBy?: T;
  membershipTier?: T;
  payrollPeriod?:
    | T
    | {
        startDate?: T;
        endDate?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payroll-repayments_select".
 */
export interface PayrollRepaymentsSelect<T extends boolean = true> {
  repaymentId?: T;
  advanceId?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payrolls_select".
 */
export interface PayrollsSelect<T extends boolean = true> {
  payrollId?: T;
  employerId?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payroll-transactions_select".
 */
export interface PayrollTransactionsSelect<T extends boolean = true> {
  transactionId?: T;
  companyUUID?: T;
  employeeId?: T;
  advanceId?: T;
  repaymentId?: T;
  transactionDate?: T;
  transactionType?: T;
  amount?: T;
  paymentStatus?: T;
  bankDetails?:
    | T
    | {
        bankName?: T;
        accountNumber?: T;
        routingNumber?: T;
        referenceNumber?: T;
      };
  reconciliationStatus?: T;
  fees?:
    | T
    | {
        feeType?: T;
        amount?: T;
        description?: T;
        id?: T;
      };
  metadata?:
    | T
    | {
        initiatedBy?: T;
        approvedBy?: T;
        notes?: T;
        attachments?:
          | T
          | {
              file?: T;
              description?: T;
              id?: T;
            };
      };
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "factoring-calculations_select".
 */
export interface FactoringCalculationsSelect<T extends boolean = true> {
  advanceId?: T;
  employerId?: T;
  payrollId?: T;
  riskScore?: T;
  riskCategory?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "factoring-repayments_select".
 */
export interface FactoringRepaymentsSelect<T extends boolean = true> {
  repaymentId?: T;
  advanceId?: T;
  companyUUID?: T;
  scheduledPaymentDate?: T;
  actualPaymentDate?: T;
  totalAmountDue?: T;
  totalAmountPaid?: T;
  paymentStatus?: T;
  amountDue?:
    | T
    | {
        principal?: T;
        interest?: T;
        fees?: T;
      };
  amountPaid?:
    | T
    | {
        principal?: T;
        interest?: T;
        fees?: T;
      };
  lateFees?:
    | T
    | {
        feeDate?: T;
        feeType?: T;
        feeAmount?: T;
        paid?: T;
        id?: T;
      };
  paymentHistory?:
    | T
    | {
        paymentDate?: T;
        amount?: T;
        paymentMethod?: T;
        referenceNumber?: T;
        id?: T;
      };
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payroll-factoring_select".
 */
export interface PayrollFactoringSelect<T extends boolean = true> {
  factorUUID?: T;
  companyUUID?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}